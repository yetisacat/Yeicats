[pytest]

#配置 allure 的执行文件
#addopts参数,可以更改默认命令行选项,可添加多个命令行参数,多个命令行参数用空格分隔,-所有参数均为插件包的参数--clean-alluredir
#表示生成临时的json格式临时文件报告<-vs --alluredir ./temp>,再使用命令生成 allure 报告
#失败用例重跑 --reruns 2,  即表示失败重跑 2 次.
addopts = -vs
;    -v 详细信息
;    -s 调试信息
;    -n 多线程 -n=2
;    -x 只要有一个用例失败就停止运行
;    -k 根据用例的字符串选择运行 -k "regis or login"
;    -m 根据标记运行 -m “smoke or usermanager”
;    --maxfail 只要有N个用例失败就停止运行。--maxfail=2
;    --reruns 失败用例重跑 --reruns=2
;    --html 生成HTML测试报告 --html=./reports/report.html

#匹配执行当前配置的文件夹下的用例,或文件夹里的部分用例
testpaths = ./API/zhenjing
#不搜索执行对应文件夹下或文件下的用例
norecursedirs = pass
#匹配执行的用例文件模块:python_files
python_files = *_test.py test_*.py test*.py *test.py
#匹配执行的类规则
python_classes = Test*
#匹配执行的用例函数规则
python_functions =test_*
#配置基础路径
#base_url = https://hospital.zhenjingai.com
#执行被标记的用例,在需要测试的函数方法上进行标记:@pytest.mark.smoke,运行时输入 pytest -m smoke,运行多个用例时输入 ptest -m "smoke or XXX"
markers =
    smoke: 冒烟用例,run the smoke test funcitions for tasks project
#使用方法:跳过用例,可以以 XX 条件进行condition跳过,,@pytest.mark.skip(condition, reason="跳过描述")
#    skip :
